WIP: Kind of a uniform interface so different clients can communicate with others, but still thinking if its a good idea.
Fespar commands available at the bottom.

Fallengine communication interface

This is a specification for the FallEngine Common Communication Interface (FECCI), which may allow to 
communicate between two implementers of this library, be it the same program or not, allow game recording and replaying,
client-server architectures, and scripted testing. All of this by providing a text based way of executing commands on a game.

Commands

Commands are the base of the FECCI, everything (may change in the future) in the FECCI is a command. 
The basic structure of a command is:

    <command> [arguments...] <command terminator>

Where <> means required, and [] optional.

Documentation for commands should use this structure:

    <command> [<argument name>:<argument type>[=<default value>]... ] <command terminator>

<command>: Specifies a instruction to the game. A valid command name is composed only from uppercase and lowercase letters.
Commands that begin with [FGPTZfgptz] are reserved for FallEngine. 
Commands that begin with uppercase are Pre-game commands, before a game has started.
Commands that begin with lowercase are In-Game commands, during a game.

...: Variable lenght list of arguments.

[arguments]: A space separated list of arguments, ends when a command terminator is found.
Newlines, spaces and semicolons can't be used in arguments, unless they are escaped with backslashes ('\') or
they are quoted using double quotes ('"'). Double quotes can be used inside or outside quoted stings by escaping them.

<argument name>: The name of the argument, should be descriptive.

<argument type>: The type of the argument, it is one of:
    string: Any string of text, unquoted or quoted (quotes are not included in the string).
    int: An integer.
    bool: A boolean, the values 'F' and 'T' indicate false and true respectively.

<default value>: The default value of the argument if not given, defaults can only be at the end of a list.

<command terminator>: Indicates the end of a command, it is either a newline ('\n', or whatever it is on your system), or a
semicolon (';').



Presentation commands


##################################################################################################

Previous specification of falleng::fespar::Fespar

# This is a very simple set of commands to simulate players in a scripted simulation for fallEngine
#
# Script format:
# <OPCODE> [Arguments... (space separated)] Newline
#
# In this help file:
# <OPCODE> Argument:type[=Default_argument] # Action_name | Action_description Newline
#
# Everything after a "#" is a comment

## Pre-game actions (Start with a uppercase letter)

# Game actions

Gap args:args... # Game_add_player | Add a player, arguments are defined by player implementation
Grp id:int       # Game_remove_player | Remove a player with id
Gop id:int                  # Game_order_players   | Order the players, making player with id hte first
Gsp                         # Game_shuffle_players | Shuffle the players
Gi                          # Game_init            | Begin the game

# Player actions

Psp player_A:int player_B:int # Player_set_partner | Sets player_A.partner = player_B and vice-versa


## In-Game actions

# Player actions (All lowercase)

psh pos:int # Current_player_select_own_hand | Select a player's card based on its position
pst pos:int # Current_player_select_table    | Select a card from the table based on its position
psu         # Current_player_undo            | Undo the current player last selection
psc         # Current_player_clear_select    | Clear the current player selection

# Game actions

gs  count_from_4:bool=false # Game_step            | Player has selected its cards, now play them and continue the game, 
#                                                    if the game is waiting the next round the argument is used
